name: Policy checks

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  dockerfile-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check if Dockerfile exists
        id: dockerfile_exists
        run: |
          if [ -f "Dockerfile" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - uses: hadolint/hadolint-action@v3.1.0
        if: steps.dockerfile_exists.outputs.exists == 'true'
        with:
          dockerfile: Dockerfile

  terraform-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check if Terraform files exist
        id: terraform_exists
        run: |
          if find . -name "*.tf" -type f | grep -q .; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - uses: hashicorp/setup-terraform@v3
        if: steps.terraform_exists.outputs.exists == 'true'
      - name: Check Terraform formatting
        if: steps.terraform_exists.outputs.exists == 'true'
        run: terraform fmt -check
      - name: Initialize Terraform
        if: steps.terraform_exists.outputs.exists == 'true'
        run: terraform init -backend=false
      - name: Validate Terraform
        if: steps.terraform_exists.outputs.exists == 'true'
        run: terraform validate

  checkov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check if scan files exist
        id: scan_files_exist
        run: |
          if find . \( -name "*.tf" -o -name "*.yaml" -o -name "*.yml" \) -type f | grep -q .; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - uses: bridgecrewio/checkov-action@v12
        if: steps.scan_files_exist.outputs.exists == 'true'
        with:
          directory: .
          quiet: true
          framework: terraform,kubernetes